一、缓冲流的作用:提升文件读写的效率

二、4个缓冲流
处理非文本文件的字节流:            使用的方法
BufferedInputStream         read(byte[] buffer)
BufferedOutputStream        write(byte[] buffer, int fromIndex, int len) \ flush()
处理文本文件的字符流:
BufferedReader              read(char[] cBuffer) \ readLine()
BufferedWriter              write(char[] cBuffer, int fromIndex, int len) \ flush()

三、实现的步骤
1.创建File的对象、流的对象(包括文件流、缓冲流)
2.使用缓冲流实现 读取数据 或 写出数据 的过程(*)
    读取:int read(char[] cBuffer/byte[] buffer): 每次将数据读入到cBuffer/buffer数组中,并返回读入到数组中的长度
    写出:void write(String str) / write(char[] cBuffer):将str或cBuffer写出到文件中
        void write(byte[] buffer): 将byte[]写出到文件中
3.关闭资源