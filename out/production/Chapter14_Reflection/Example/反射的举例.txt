1.面向对象中创建对象,调用指定结构(属性\方法)等功能,可以不使用反射,也可以使用反射,两者的区别是:
    >不使用反射需要考虑封装性.如:出了Person类后,就不能调用Person类中私有的结构
    >使用反射可以调用运行时类中任意的构造器、属性、方法.包括了私有的属性、方法构造器

2.以前创建对象并调用方法的方式,与现在通过反射创建对象并调用方法的方式,哪种用得更多?场景是什么?
    >从作为程序员开发的角度,开发中主要完成业务代码,对于相关的对象和方法的调用是确定的,所以使用非反射的方式多一些
    >因为反射体现了动态性(可以在运行时获取对象所属的类,动态的调用相关的方法),所以在设计框架的时候,会大量地使用反射
    框架 = 注解 + 反射 + 设计模式

3.单例模式的饿汉式和懒汉式中,私有化类的构造器 此时通过反射,可以创建单例模式中类的多个对象

4.通过反射,可以调用类中私有的结构,是否与面向对象的封装性有冲突?
    >封装性体现的是是否建议调用内部api的问题
    >反射体现的是能否调用的问题.因为类的完整结构,所以有能力进行调用